.include beta.uasm
.include lab5checkoff.uasm
count_bull_cows:
| your subroutine must have this name
PUSH(LP)
| standard subroutine entry sequence
PUSH(BP)
MOVE(SP, BP)
ALLOCATE(8)
PUSH(R2)
PUSH(R3)
PUSH(R4)
PUSH(R5)
PUSH(R6)
PUSH(R7)
PUSH(R8)
PUSH(R9)
PUSH(R10)
PUSH(R11)
PUSH(R12)
PUSH(R13)
PUSH(R14)
.breakpoint:
|a => R10
LD(BP,-12,R10)
|B =>R11
LD(BP,-16,R11)
|bulls = 0
LD(BP,0,R2)
CMOVE(0,R2)
|mask = 0xF
LD(BP,28,R9)
CMOVE(0xF,R9)
|i = 0
LD(BP,8,R4)
CMOVE(0,R4)
BR(endforloop1)
loop1:
AND(R10,R9,R12)
AND(R11,R9,R13)
CMPEQ(R12,R13,R14)
BEQ(R14,endifmask)
ADDC(R2,1,R2)
OR(R10,R9,R10)
OR(R11,R9,R11)
endifmask:
SHLC(R9,4,R9)
ADDC(R4,1,R4)
endforloop1:
CMPLTC(R4,4,R1)
BNE(R1,loop1)
LD(BP,4,R3)
LD(BP,16,R6)
CMOVE(0,R3)
|for(i = 0...)
CMOVE(0,R4)
BR(endforloop2)
loop2:
|atry = a & 0xF
LD(BP,20,R7)
ANDC(R10,0XF,R7)
SHRC(R10,4,R10)
|if(atry != 0xF)
CMPEQC(R7,0xF,R13)
BNE(R13,endforifatry)
|btemp = b
MOVE(R11,R6)
CMOVE(0xF,R9)
|j=0
LD(BP,12,R5)
CMOVE(0,R5)
BR(endforloop3)
loop3:
ANDC(R6,0xF,R8)
SHRC(R6,4,R6)
|if(btry == atry)
CMPEQ(R7,R8,R13)
BEQ(R13,endifbtry)
ADDC(R3,1,R3)
OR(R11,R9,R11)
BR(endforifatry)
endifbtry:
SHLC(R9,4,R9)
ADDC(R5,1,R5)
endforloop3:
CMPLTC(R5,4,R13)
BNE(R13,loop3)
endforifatry:
ADDC(R4,1,R4)
endforloop2:
CMPLTC(R4,4,R1)
BNE(R1,loop2)
SHLC(R2,4,R0)
ADD(R0,R3,R0)
POP(R14)
POP(R13)
POP(R12)
POP(R11)
POP(R10)
POP(R9)
POP(R8)
POP(R7)
POP(R6)
POP(R5)
POP(R4)
POP(R3)
POP(R2)
MOVE(BP,SP)
POP(BP)
POP(LP)
RTN()
StackBase: LONG(.+4)
. = .+0x1000
| Pointer to bottom of stack
| Reserve space for stack...
